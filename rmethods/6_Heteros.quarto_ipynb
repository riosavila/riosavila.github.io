{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Multiple Regression Analysis\"\n",
        "subtitle: \"When A5 Fails\"\n",
        "author: Fernando Rios-Avila\n",
        "jupyter: nbstata\n",
        "format: \n",
        "  revealjs: \n",
        "    slide-number: true\n",
        "    width: 1600\n",
        "    height: 900\n",
        "    code-fold: true\n",
        "    echo: true\n",
        "    css: styles.css \n",
        "    chalkboard: true\n",
        "---\n",
        "\n",
        "\n",
        "## What is Heteroskedasticity?\n",
        "\n",
        "-   Mathematically: \n",
        "$$Var(e|x=c_1)\\neq Var(e|x=c_2)$$\n",
        "\n",
        "-   This means: the conditional variance of the errors is not constant across control characteristics.\n"
      ],
      "id": "3ac17ca6"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| echo: false\n",
        "*| fig-align: center\n",
        "\n",
        "frause wage1, clear\n",
        "gen lnw = log(wage)\n",
        "set scheme white2\n",
        "color_style tableau\n",
        "two (histogram lnw if female==1, pstyle(p1) w(0.1) color(%50) start(-1))  ///\n",
        "    (histogram lnw if female==0, pstyle(p2) w(0.1) color(%50) start(-1)), ///\n",
        "    legend(order(1 \"Women\" 2 \"Men\")) xtitle(\"log(wage)\")"
      ],
      "id": "0d7b4988",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Consequences\n",
        "\n",
        "What happens when you have heteroskedastic errors?\n",
        "\n",
        "-   In terms of $\\beta's$ and $R^2$ and $R^2_{adj}$, nothing. Coefficients and Goodness of fit are still unbiased and consistent.\n",
        "\n",
        "-   But, Coefficients standard errors are based on the simplifying assumption of normality. Thus Variances will be bias!.\n",
        "\n",
        "    -   If variances are biased, then all statistics will be wrong.\n",
        "\n",
        "##  {.scrollable}\n",
        "\n",
        "### How bad can it be?\n",
        "\n",
        "Setup:\n",
        "\n",
        "$y = e$ where $e \\sim N(0,\\sigma_e^2h(x))$\n",
        "\n",
        "$x = uniform(-1,1)$\n"
      ],
      "id": "f0932216"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| echo: true\n",
        "*| code-fold: true\n",
        "*| output: false\n",
        "/*capture program drop sim_het\n",
        "program sim_het, eclass\n",
        "    clear\n",
        "    set obs 500 \n",
        "    gen x = runiform(-1,1)\n",
        "    gen u = rnormal()\n",
        "    ** Homoskedastic\n",
        "    gen y_1 = u*2\n",
        "    ** increasing first, decreasing later\n",
        "    gen y_4 = u*sqrt(9*abs(x))\n",
        " \treplace x = x-2\n",
        "    reg y_1 x\n",
        "    matrix b=_b[x],_b[x]/_se[x]\n",
        "    reg y_4 x\n",
        "    matrix b=b,_b[x],_b[x]/_se[x]\n",
        "    matrix coleq   b = h0 h0 h3 h3 \n",
        "    matrix colname b = b  t  b  t \n",
        "    ereturn post b\n",
        "end\n",
        "qui:simulate , reps(1000) dots(100):sim_het\n",
        "save mdata/simulate.dta, replace*/\n",
        "use mdata/simulate.dta, replace\n",
        "two (kdensity h0_b_t) (kdensity h3_b_t) ///\n",
        "    (function y = normalden(x), range(-4 4) lw(2) color(gs5%50)), ///\n",
        "    legend(order(3 \"Normal\" 1 \"With Homoskedasticty\" 2 \"with Heteroskedasticity\"))\n",
        "graph export images/fig6_1.png, replace height(1000)"
      ],
      "id": "d23accb6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "![](images/fig6_1.png){fig-align=\"center\"}\n",
        "\n",
        "# What to do about it?\n",
        "\n",
        "## What to do about it?\n",
        "\n",
        "-   So, If errors are heteroskedastic, then all statistics (t-stats, F-stats, chi2's) are wrong.\n",
        "\n",
        "-   But, there are solutions...many solutions\n",
        "\n",
        "    -   GLS: Generalized Least Squares\n",
        "    -   WLS: Weighted Least Squares\n",
        "    -   FGLS: Feasible Generealized Least Squares\n",
        "    -   WFLS: Weighted FGLS\n",
        "    -   HC0-HC3: Heteroskedasticity consistent SE\n",
        "\n",
        "-   Some of them are more involved than others.\n",
        "\n",
        "-   But before trying to do that, lets first ask...do we have a problem?\n",
        "\n",
        "## Detecting the Problem\n",
        "\n",
        "-   Consider the model:\n",
        "\n",
        "$$y = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 +\\beta_3 x_3 +e\n",
        "$$\n",
        "\n",
        "-   We usually start with the assumption that errors are homoskedastic $Var(e|x's)=\\sigma^2_c$.\n",
        "-   However, now we want to allow for the possibility of heteroskedasiticity. ie, that variance is some function of X.\n",
        "    * We have to test if the conditional variance is a function that varies with $x$:\n",
        "\n",
        "$$Var(e|x)=f(x_1,x_2,\\dots,x_k) \\sim a_0+a_1x_1 + a_2 x_2 + \\dots + a_k x_k+v$$\n",
        "\n",
        "## \n",
        "\n",
        "$$Var(e|x)=f(x_1,x_2,\\dots,x_k) \\sim a_0+a_1x_1 + a_2 x_2 + \\dots + a_k x_k+v$$\n",
        "\n",
        "-   This expression says the conditional variance can vary with $X's$.\n",
        "-   It could be as flexible as needed, but linear is usually enough.\n",
        "\n",
        "With this the Null hypothesis is: \n",
        "$$H_0: a_1 = a_2 = \\dots = a_k=0 \\text{ vs } H_1: H_0 \\text{ is false}\n",
        "$$\n",
        "\n",
        "Easy enough, but do we **KNOW** $Var(e|x)$ ? can we model the equation?\n",
        "\n",
        "## \n",
        "\n",
        "**We don't!.**\n",
        "\n",
        "-   But we can use $\\hat e^2$ instead. The assumption is that $\\hat e^2$ is a good enough approximation for the condional variance $Var(e|x)$.\n",
        "\n",
        "-   With this, the test for heteroskedasticty can be implemented using the following recipe.\n",
        "\n",
        "1.  Estimate $y=x\\beta+e$ and obtain predicted model errors $\\hat e$.\n",
        "2.  Model $\\hat e^2 = \\color{green}{h(x)}+v$, as a proxy for the variance model.\n",
        "    -   $h(x)$ could be estimated using some linear or nonlinear functional forms.\n",
        "3.  Test if conditional variance changes with respect to any explanatory variables.\n",
        "    - The null is H0: Errors are Homoskedastic. Rejection the error suggests you have Heteroskedasticity.\n",
        "    - \n",
        "**Note:** Depending on Model specification, and test used, there are various Heteroskedasticity *tests*.\n",
        "\n",
        "## Heteroskedasticity tests:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "\\text{Model}: y &= \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\beta_3 x_3 + e \\\\\n",
        "\\hat e & = y - (\\hat \\beta_0 + \\hat\\beta_1 x_1 +\\hat \\beta_2 x_2 +\\hat \\beta_3 x_3)\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "### Breusch-Pagan test:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "\\hat e^2 & = \\gamma_0 + \\gamma_1 x_1 +\\gamma_2 x_2 +\\gamma_3 x_3 + v \\\\\n",
        "H_0 &: \\gamma_1=\\gamma_2=\\gamma_3=0 \\\\\n",
        "F &= \\frac{R^2_{\\hat e^2}/k}{(1-R^2_{\\hat e^2})/(n-k-1)} \\\\\n",
        "LM &=N R^2_{\\hat e^2} \\sim \\chi^2(k) \\leftarrow BP-test\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "-   Easy and simple, but only considers \"linear\" Heteroskedasticity\n",
        "\n",
        "## Heteroskedasticity tests:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "\\text{Model}: y &= \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\beta_3 x_3 + e \\\\\n",
        "\\hat e & = y - (\\hat \\beta_0 + \\hat\\beta_1 x_1 +\\hat \\beta_2 x_2 +\\hat \\beta_3 x_3)\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "### White:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "\\hat e^2 & = \\gamma_0 + \\sum \\gamma_{1,k} x_k + \\sum \\gamma_{2,k} x_k^2 + \\sum_k \\sum_{j\\neq k} \\gamma_{3,j,k} x_j x_k + v \\\\\n",
        "H_0 &: \\text{ All } \\gamma's =0 \\\\\n",
        "F &= \\frac{R^2_{\\hat e^2}/q}{(1-R^2_{\\hat e^2})/(n-q-1)} \\\\\n",
        "LM &=N R^2_{\\hat e^2} \\sim \\chi^2(q) \n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "$q$ is the total number of coefficients in the model (not counting the intercept.)\n",
        "\n",
        "-   Accounts for nonlinearities, but gets \"messy\" with more variables.\n",
        "\n",
        "## Heteroskedasticity tests:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "\\text{Model}: y &= \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\beta_3 x_3 + e \\\\\n",
        "\\hat e & = y - (\\hat \\beta_0 + \\hat\\beta_1 x_1 +\\hat \\beta_2 x_2 +\\hat \\beta_3 x_3)\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "### Modified White:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "\\hat y &= y - \\hat e \\\\\n",
        "\\hat e^2 & = \\gamma_0 + \\gamma_1 \\hat y + \\gamma_2 \\hat y^2 + \\dots + v \\\\\n",
        "H_0 &: \\gamma_1 = \\gamma_2 = \\dots =0 \\\\\n",
        "F &= \\frac{R^2_{\\hat e^2}/ h }{(1-R^2_{\\hat e^2})/(n-h-1)} \\\\\n",
        "LM &=N R^2_{\\hat e^2} \\sim \\chi^2(h) \n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "$h$ is the total number of coefficients in the model (not counting the intercept.)\n",
        "\n",
        "-   Accounts for nonlinearities (because of how $\\hat y$ is constructed), and is simpler to implement.\n",
        "-   But, nonlinearity is restricted.\n",
        "\n",
        "## Example {.scrollable}\n",
        "\n",
        "Housing prices:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "price &= \\beta_0 + \\beta_1 lotsize + \\beta_2 sqft + \\beta_3 bdrms + e_1 \\\\\n",
        "log(price) &= \\beta_0 + \\beta_1 log(lotsize) + \\beta_2 log(sqft) + \\beta_3 bdrms + e_2 \\\\\n",
        "\\end{aligned}\n",
        "$$\n"
      ],
      "id": "bf4f12cf"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| code-fold: false\n",
        "frause hprice1, clear\n",
        "reg price lotsize sqrft bdrms \n",
        "predict res, res\n",
        "predict price_hat\n",
        "gen res2=res^2\n",
        "display \"BP-test\"\n",
        "reg res2  lotsize sqrft bdrms, notable\n",
        "display \"nR^2:   \" e(N)*e(r2)\n",
        "display \"p(chi2) \" %5.3f chi2tail(e(df_m),e(N)*e(r2))\n",
        "\n",
        "display \"White Test\"\n",
        "reg res2  c.(lotsize sqrft bdrms)##c.(lotsize sqrft bdrms), notable\n",
        "display \"nR^2:   \" e(N)*e(r2)\n",
        "display \"p(chi2) \" %5.3f chi2tail(e(df_m),e(N)*e(r2))\n",
        "\n",
        "display \"MWhite Test\"\n",
        "reg res2  price_hat c.price_hat#c.price_hat, notable\n",
        "display \"nR^2:   \" e(N)*e(r2)\n",
        "display \"p(chi2) \" %5.3f chi2tail(e(df_m),e(N)*e(r2))"
      ],
      "id": "43916619",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| code-fold: false\n",
        "frause hprice1, clear\n",
        "reg lprice llotsize lsqrft bdrms \n",
        "predict res, res\n",
        "predict price_hat\n",
        "gen res2=res^2\n",
        "display \"BP-test\"\n",
        "reg res2  llotsize lsqrft bdrms, notable\n",
        "display \"nR^2:   \" e(N)*e(r2)\n",
        "display \"p(chi2) \" %5.3f chi2tail(e(df_m),e(N)*e(r2))\n",
        "\n",
        "display \"White Test\"\n",
        "reg res2  c.(llotsize lsqrft bdrms)##c.(llotsize lsqrft bdrms), notable\n",
        "display \"nR^2:   \" e(N)*e(r2)\n",
        "display \"p(chi2) \" %5.3f chi2tail(e(df_m),e(N)*e(r2))\n",
        "\n",
        "display \"MWhite Test\"\n",
        "reg res2  price_hat c.price_hat#c.price_hat, notable\n",
        "display \"nR^2:   \" e(N)*e(r2)\n",
        "display \"p(chi2) \" %5.3f chi2tail(e(df_m),e(N)*e(r2))"
      ],
      "id": "01565913",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Can you do this in `Stata`? Yes, `estat hettest`. But look into the options. There are many more options in that command.\n",
        "\n",
        "#  {background-image=\"https://i.imgflip.com/7v1kuw.jpg\" background-size=\"contain\"}\n",
        "\n",
        "## What do you do when you have Heteroskedasticity?\n",
        "\n",
        "**We need to fix!**\n",
        "\n",
        "-   Recall, the problem is that $Var(e|X)\\neq c$\n",
        "-   This affects how standard errors are estimated (we required homoskedasticity). But what happens when Homoskedasticity doesnt hold?\n",
        "    1.  We can **\"fix/change\"** the model, so its no longer heteroskedastic, and Standard Inference works. (FGLS, WLS)\n",
        "    2.  We neec to account for heteroskedasticity when estimating the variance covariance model.\n",
        "\n",
        "So lets learn to Fix it first\n",
        "\n",
        "## How do we **Fix** Heteroskedasticity?\n",
        "\n",
        "-   In order to address the problem of heteroskedasticity, we require knowledge of why the model is heteroskedastic, or what is generating it.\n",
        "\n",
        "$$Var(e|X)=h(x)\\sigma^2_e\n",
        "$$\n",
        "\n",
        "-   Where $h(x)$ is the \"source\" of heteroskedasticity, which may be a known or estimated function of $x$.\n",
        "    -   Which should be an strictly possitive function of $x's$.\n",
        "\n",
        "## \n",
        "\n",
        "### Knowledge is power\n",
        "\n",
        "-   If you know $h(x)$, correcting heteroskedasticity is \"easy\". Consider the following:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "y &= b_0 + b_1 x_1 + b_2 x_2 + b_3 x_3 +e \\\\\n",
        "Var(e|x) &=x_1 \\sigma_e^2 || h(x)=x_1\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "You can correct Heteroskedasticity in two ways:\n",
        "\n",
        "1.  Transform model by dividing everything by $\\sqrt{h(x)}$: $$\\begin{aligned}\n",
        "    \\frac{y}{\\sqrt{x_1}} &= b_0 \\frac{1}{\\sqrt{x_1}}+ b_1 \\sqrt{x_1} + b_2 \\frac{x_2}{\\sqrt{x_1}} + b_3 \\frac{x_3}{\\sqrt{x_1}} +\\frac{e}{\\sqrt{x_1}} \\\\\n",
        "    Var\\left(\\frac{e}{\\sqrt{x_1}}|x\\right) &= \\frac{1}{x_1} x_1\\sigma_e^2=\\sigma_e^2\n",
        "    \\end{aligned}\n",
        "    $$\n",
        "\n",
        "The new error is Homoskedastic (but has no constant)!\n",
        "\n",
        "## \n",
        "\n",
        "1.  Estimate the model using by $\\frac{1}{h(x)}$ as weights: $$\\begin{aligned}\n",
        "    \\beta=\\min_\\beta \\sum \\frac{1}{h(x)} (y-(b_0 + b_1 x_1 + b_2 x_2 + b_3 x_3))^2\n",
        "    \\end{aligned}\n",
        "    $$\n",
        "\n",
        "-   Same solution as before, and there is no need to \"transform\" data, or keep track of a constant.\n",
        "\n",
        "-   This is often called WLS (weighted least squares) or GLS (Generalized Least Squares).\n",
        "\n",
        "## \n",
        "\n",
        "-   Interestingly: These approaches are more efficient than Standard OLS.\n",
        "    -   Uses more information (heteroskedasticity)\n",
        "    -   Makes better use of information (More weight to better data) Standard errors are smaller.\n",
        "-   t-stats, F-stats, etc now are valid.\n",
        "-   Coefficients will **NOT** be the same as before.\n",
        "-   $R^2$ is less useful\n",
        "-   Heteroskedasticty test on transformed data may required added work.\n",
        "\n",
        "## \n",
        "\n",
        "### FGLS: We do not know $h(x)$, but we can guess\n",
        "\n",
        "-   If $h(x)$ is not known, we can use an auxiliary model to estimate it:\n",
        "\n",
        "$$\\begin{aligned}\n",
        "Var(e|x) &= \\sigma^2 \\exp(\\delta_0 + \\delta_1 x_1 + \\delta_2 x_2 +\\dots) \\exp v \\\\\n",
        "\\hat e^2 &= \\sigma^2 \\exp(\\delta_0 + \\delta_1 x_1 + \\delta_2 x_2 +\\dots) \\exp v \\\\\n",
        "log(\\hat e^2) &= \\delta_0 + \\delta_1 x_1 + \\delta_2 x_2 +\\dots+ v \\\\\n",
        "log(\\hat e^2) &= \\delta_0 + \\delta_1 \\hat y + \\delta_2 \\hat y^2 + \\dots+ v \\\\\n",
        "\\widehat{\\log h(x)} &= \\hat \\delta_0 + \\hat \\delta_1 x_1 + \\hat \\delta_2 x_2 + \\dots = x \\hat \\delta \\\\\n",
        "\\hat h(x) &= \\exp (x \\hat \\delta) \\text{ or } \\hat h(x)=e^{x \\hat \\delta}\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "-   Proceed as before (weighted or transformed)\n",
        "-   Its call Feasible GLS, because we need to estimate $h(x)$.\n",
        "\n",
        "## Do not Correct, account for it: GLS and FGLS\n",
        "\n",
        "Recall \"Long\" variance formula:\n",
        "\n",
        "$$Var(\\beta)=\\color{brown}{(X'X)^{-1}}\\color{green}{X}'\\color{red}{Var(e|X)}\\color{green}{X}\\color{brown}{(X'X)^{-1}}\n",
        "$$\n",
        "\n",
        "- The [red]{.redtxt} part is a $N\\times N$ VCOV matrix of ALL erros. It can be Simplified with what we know!\n",
        "\n",
        "$$\\begin{aligned}\n",
        "Var_{gls/fgls}(\\beta)&=\\sigma^2_{\\tilde e} \\color{brown}{(X'X)^{-1}}\\color{green}{X}'\\color{red}{ \\Omega_h(x) }\\color{green}{X}\\color{brown}{(X'X)^{-1}} \\\\\n",
        "\\sigma^2_{\\tilde e} &= \\frac{1}{N-k-1} \\sum \\frac{\\hat e^2}{h(x)} \\\\\n",
        "\\Omega_h(x) [i,j] &= h(x_i) & \\text{ if } i=j \\\\\n",
        "& = 0 & \\text{ if } i\\neq j \\\\\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "- SE are corrected, but coefficients remain the same!\n",
        "\n",
        "## Do not Correct, account for it: White Sandwich Formula\n",
        "\n",
        "- What if we do not want to even try guessing $h(x)$?\n",
        "- you can use Robust Standard errors! \n",
        "  - Heteroskedastic Consistent SE to Heterosedasticity of unknown form.\n",
        "\n",
        "Let me present to you, the Sandwitch Formula:\n",
        "$$Var(\\beta)=c \\color{brown}{(X'X)^{-1}}\\color{green}{X}'\\color{red}{\\Omega}\\color{green}{X}\\color{brown}{(X'X)^{-1}}\n",
        "$$\n",
        "\n",
        "$$\\begin{aligned}\n",
        "\\Omega [i,j] &= \\hat e_i^2 & \\text{ if } i=j \\\\\n",
        "& = 0 & \\text{ if } i\\neq j \\\\\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "- The best approximation to conditional variance is equal to $\\hat e_i^2$. (plus assuming no correlation)\n",
        "\n",
        "- Valid in large samples, but can be really bad in smaller ones. \n",
        "\n",
        "- There are other versions. See HC0 HC1 HC2 HC3.\n",
        "\n",
        "## What if did $h(x)$, and it was wrong\n",
        "\n",
        "1. Using FGLS will change coefficients a bit. If they change a lot, It could indicate other assumptions in the model are incorrect. (functional form or exogeneity)\n",
        "2. In either case, you could always combine FGLS with Robust Standard Errors!\n",
        "\n",
        "## Statistical Inference\n",
        "\n",
        "- If applying GLS or FGLS via transformations or reweighting. All we did before is valid.\n",
        "- If using Robust standard errors (HC), t-stats are constructed as usual, but\n",
        "- F-stats formulas are no longer valid. \n",
        "\n",
        "Instead...use the long formula\n",
        "\n",
        "$$\\begin{aligned}\n",
        "H_0: & R_{q,k+1}\\beta_{k+1,1}=c_{q,1} \\\\\n",
        "\\Sigma_R &= R_{q,k+1} V^r_\\beta R'_{q,k+1} \\\\\n",
        "F-stat &= \\frac 1 q (R\\beta-c)' \\Sigma_R^{-1} (R\\beta-c) \n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "\n",
        "\n",
        "##\n",
        "### Extra: Prediction and SE\n",
        "\n",
        "Prediction SE: \n",
        "\n",
        "- If you are using GLS, Formulas seen before apply with the following modification:\n",
        "$Var(e|X=x_0)=\\sigma^2_{\\tilde e} h(x_0)$ \n",
        "- If you are using FGLS, its not that simple because of the two-step modeling \n",
        "\n",
        "For Prediction with Logs\n",
        "\n",
        "- You need to take into account Heteroskedasticity\n",
        "\n",
        "$$\\hat y_i = \\exp \\left( \\widehat{log y_i}+\\hat \\sigma_{\\tilde e}^2 \\hat h_i /2 \\right)\n",
        "$$\n",
        "\n",
        "## Example {.scrollable}\n"
      ],
      "id": "4c989b2a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| code-fold: false\n",
        "*| output: false\n",
        "frause smoke, clear\n",
        "gen age_40sq=(age-40)^2\n",
        "** Default\n",
        "qui:reg cigs lincome lcigpric educ age age_40sq restaurn\n",
        "est sto m1\n",
        "predict cig_hat\n",
        "predict cig_res,res\n",
        "** GLS: h(x)=lincome Weighted\n",
        "qui:reg cigs lincome lcigpric educ age age_40sq restaurn [aw=1/lincome]\n",
        "est sto m2\n",
        "** FGLS: h(x) = f(cigs_hat)\n",
        "gen lcres=log(cig_res^2)\n",
        "qui:reg lcres c.cig_hat##c.cig_hat##c.cig_hat \n",
        "predict aux\n",
        "gen hx=exp(aux)\n",
        "qui:reg cigs lincome lcigpric educ age age_40sq restaurn [aw=1/hx]\n",
        "est sto m3\n",
        "qui:reg cigs lincome lcigpric educ age age_40sq restaurn , robust\n",
        "est sto m4\n",
        "qui:reg cigs lincome lcigpric educ age age_40sq restaurn [aw=1/lincome], robust\n",
        "est sto m5\n",
        "qui:reg cigs lincome lcigpric educ age age_40sq restaurn [aw=1/hx], robust\n",
        "est sto m6\n",
        "set linesize 255"
      ],
      "id": "31c5b613",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "esttab m1 m2 m3 m4 m5 m6, gaps mtitle(default GLS FGLS Rob GLS-Rob FGLS-Rob) ///\n",
        "nonum cell( b( fmt( 3) star ) se( par(( )) ) p( par([ ]) ) ) ///\n",
        "star(* .1 ** 0.05 *** 0.01  )"
      ],
      "id": "acf3611d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## LPM revised\n",
        "\n",
        "- What was wrong with LPM?\n",
        "  - Fixed marginal effects (depends on functional form)\n",
        "  - May predict p>1 or p<0\n",
        "  - It is Heteroskedastic by construction\n",
        "- But now we know how to deal with this! GLS (why not FGLS) and Robust\n",
        "- In LPM: $Var(y|x)=p(x)(1-p(x)) = \\hat y (1-\\hat y)$\n",
        "  - We can use this to transform or weight the data!\n",
        "  - Only works if $0<p(x)<1$.\n",
        "\n",
        "## LPM Example {.scrollable}\n"
      ],
      "id": "70752f13"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| code-fold: false\n",
        "frause gpa1, clear\n",
        "** LPM\n",
        "gen parcoll = (fathcoll | mothcoll)\n",
        "reg pc hsgpa act parcoll\n",
        "predict res_1, res"
      ],
      "id": "76bc96e2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| code-fold: false\n",
        "predict pchat\n",
        "gen hx = pchat*(1-pchat)\n",
        "sum pchat hx"
      ],
      "id": "9ecc3739",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| code-fold: false\n",
        "reg pc hsgpa act parcoll [w=1/hx]\n",
        "predict res_2, res"
      ],
      "id": "4478ac20",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "*| code-fold: false\n",
        "** Testing for Heteroskedasticity\n",
        "replace res_1 = res_1^2\n",
        "replace res_2 = res_2^2/hx\n",
        "display \"Default\"\n",
        "reg res_1 hsgpa act parcoll, notable\n",
        "display \"Weighted\"\n",
        "reg res_2 hsgpa act parcoll, notable"
      ],
      "id": "389c783c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# The end...for now\n",
        "Next Week: Problems of Specification"
      ],
      "id": "30c094b5"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "nbstata",
      "language": "stata",
      "display_name": "Stata (nbstata)",
      "path": "C:\\Users\\Fernando\\AppData\\Roaming\\jupyter\\kernels\\nbstata"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}